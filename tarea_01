"""
Simulación II - Comparación de eficiencia de métodos Monte Carlo
"""

import numpy as np
import matplotlib.pyplot as plt
import random as rd
import time  # <-- para medir tiempos

# -------------------------
# Función de interés
# -------------------------
def g(x):
    """Función a integrar: g(x) = sqrt(arctan(x))"""
    return np.sqrt(np.arctan(x))

# -------------------------
# Método Monte Carlo Crudo
# -------------------------
def crudo(N):
    """
    Estimador crudo de Monte Carlo
    Retorna: media, varianza, desviación estándar, lista de valores simulados
    """
    G = []
    for i in range(N):
        x = rd.random()       # muestra uniforme en [0,1]
        G.append(g(x))
    return np.mean(G), np.var(G), np.std(G), G

# -------------------------
# Método Monte Carlo Aceptación-Rechazo
# -------------------------
def aceptacion_rechazo(N):
    """
    Estimador por método de aceptación-rechazo
    Retorna: media, varianza, desviación estándar, lista de valores aceptados
    """
    G = []
    while len(G) < N:
        x = rd.random()
        y = rd.random() * max(g(np.linspace(0,1,100)))
        if y <= g(x):
            G.append(g(x))
    return np.mean(G), np.var(G), np.std(G), G

# -------------------------
# Ejecución y tiempos
# -------------------------
N = 10000  # número de simulaciones

# Método crudo
start_crudo = time.time()
res_crudo = crudo(N)
end_crudo = time.time()
t_crudo = end_crudo - start_crudo

# Método aceptación-rechazo
start_ar = time.time()
res_ar = aceptacion_rechazo(N)
end_ar = time.time()
t_ar = end_ar - start_ar

# -------------------------
# Resultados
# -------------------------
print("---- Método Crudo ----")
print(f"Estimador = {res_crudo[0]:.5f}, Varianza = {res_crudo[1]:.5f}, Tiempo = {t_crudo:.5f} s")

print("\n---- Método Aceptación-Rechazo ----")
print(f"Estimador = {res_ar[0]:.5f}, Varianza = {res_ar[1]:.5f}, Tiempo = {t_ar:.5f} s")

# -------------------------
# Comparación de eficiencia
# -------------------------
epsilon = (t_ar * res_ar[1]) / (t_crudo * res_crudo[1])
print(f"\nEficiencia relativa ε = {epsilon:.5f}")
if epsilon < 1:
    print("El método de aceptación-rechazo es más eficiente")
else:
    print("El método crudo es más eficiente")
